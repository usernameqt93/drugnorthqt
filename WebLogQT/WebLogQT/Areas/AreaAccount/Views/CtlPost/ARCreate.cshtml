@model ModelQT.Framework.TblPostBaiViet

@{
  ViewBag.Title="ARCreate";
  Layout="~/Areas/AreaAccount/Views/Shared/_Layout.cshtml";
}

@section jsFooter{
  <script>
	//$('#btnSelectImage').on('click', function (e) {
	//  e.preventDefault();
	//  var finder = new CKFinder();
	//  finder.selectActionFunction = function (url) {
	//	$('#txtImage').val(url);
	//  };
	//  finder.popup();
	//})

	var editor = CKEDITOR.replace('txtContent', {
	  customConfig: '/Assets/admin/plugins/ckeditor/config.js'
	});

	var abc = {
	  init: function () {
		abc.regEvents();
	  },
	  regEvents: function () {
		$('#btnCreateMetaTitle').off('click').on('click', function () {
		  var strJsTitle = document.getElementById("idTxtTitle").value;

		  $.ajax({
			url: '/AreaAccount/CtlPost/JRCreateMetaTitle',
			data: { strJsonInput: JSON.stringify(strJsTitle) },
			dataType: 'json',
			type: 'POST',
			success: function (res) {
			  if (res.blnStatusJs == true) {
				document.getElementById("idTxtMetaTitle").value = res.strOutputJs;
			  }
			}
		  })
		});

		//$('#btnCreateDescription').off('click').on('click', function () {
		//  var strJsString = document.getElementById("txtContent").value;

		//  $.ajax({
		//	url: '/AreaAccount/CtlPost/JRCreateDescription',
		//	data: { strJsonInput: JSON.stringify(strJsString) },
		//	dataType: 'json',
		//	type: 'POST',
		//	success: function (res) {
		//	  if (res.blnStatusJs == true) {
		//		document.getElementById("idTxtDescription").value = res.strOutputJs;
		//	  }
		//	}
		//  })
		//});

	  }
	}
	abc.init();
  </script>
}

<h2>ARCreate</h2>

@using(Html.BeginForm()) {
  @Html.AntiForgeryToken()

<div class="form-horizontal">
  <h4>TblPostBaiViet</h4>
  <hr />
  @Html.ValidationSummary(true,"",new { @class = "text-danger" })
  <div class="form-group">
    @Html.LabelFor(model => model.Title,htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Title,new { htmlAttributes = new { @class = "form-control",id = "idTxtTitle" } })
      @Html.ValidationMessageFor(model => model.Title,"",new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.MetaTitle,htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.MetaTitle,new { htmlAttributes = new { @class = "form-control",id = "idTxtMetaTitle" } })
      @Html.ValidationMessageFor(model => model.MetaTitle,"",new { @class = "text-danger" })
    </div>

    <div class="col-md-10">
      <a id="btnCreateMetaTitle" class="btn btn-primary btn-lg">Tự tạo meta title từ title</a>
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.CategoryID,htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.DropDownListFor(model => model.CategoryID,null,new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.CategoryID,"",new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Detail,htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.TextAreaFor(model => model.Detail,new { htmlAttributes = new { @class = "form-control" },id = "txtContent" })
      @Html.ValidationMessageFor(model => model.Detail,"",new { @class = "text-danger" })
    </div>
  </div>

  @*<div class="form-group">
    @Html.LabelFor(model => model.Description,htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.Description,new { htmlAttributes = new { @class = "form-control",id = "idTxtDescription" } })
      @Html.ValidationMessageFor(model => model.Description,"",new { @class = "text-danger" })
    </div>

    <div class="col-md-10">
	  <a id="btnCreateDescription" class="btn btn-primary btn-lg">Tự tạo Description từ detail</a>
    </div>
  </div>*@

  @*<div class="form-group">
		@Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			<div class="checkbox">
				@Html.EditorFor(model => model.Status)
				@Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>*@

  <div class="form-group">
    <div class="col-md-offset-2 col-md-10">
      <input type="submit" value="Create" class="btn btn-default" />
    </div>
  </div>
</div>
}

<div>
  @Html.ActionLink("Back to List","Index")
</div>
