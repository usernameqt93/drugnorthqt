<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sw="clr-namespace:WindowStyle">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DefaultValue.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--Combobox style-->
    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="28" />
                        </Grid.ColumnDefinitions>
                        <Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"
                          CornerRadius="3"
                          Background="{TemplateBinding Background}"
                          BorderBrush="#CED4DA"
                          BorderThickness="1" />
                        <Border
                          Grid.Column="0"
                            Grid.ColumnSpan="2"
                          CornerRadius="0"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          BorderThickness="10" />
                        <Path Margin="7"
                          x:Name="Arrow"
                          Grid.Column="1"    
                          Fill="#495057"
                          Stroke="#495057"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Stretch="None"
                          Data="M 0 0 L 4 4 L 8 0 Z"/>
                        <!--M 0 0 L 3 6 L 6 0 Z-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Arrow" Property="Fill" Value="Gray"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="Border" Property="Background" Value="LightGray" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />-->
                            <Setter TargetName="Border" Property="Background" Value="#F0F0F0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#CED4DA" />

                            <Setter Property="Foreground" Value="Gray"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InvicoComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{DynamicResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center" />
                        <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{DynamicResource ComboBoxTextBox}"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                            <Grid
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                        x:Name="DropDownBorder"
                                        Background="White"
                                        CornerRadius="3"
                                        BorderThickness="1"
                                        BorderBrush="Gray"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">

                    <Setter Property="SnapsToDevicePixels" Value="true" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="{DynamicResource DefaultContentFontSize}" />
                    <Setter Property="Foreground" Value="Gray" />
                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border
                                    Name="Border"
                                    BorderThickness="0"
                                    Padding="5"
                                    CornerRadius="0"
                                    Background="White" >
                                    <Label VerticalContentAlignment="Center">
                                        <ContentPresenter/>
                                    </Label>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#FFE7E6E6"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="InvicoServerComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{DynamicResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                        <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{DynamicResource ComboBoxTextBox}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                            <Grid
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                        x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="1"
                                        BorderBrush="Gray"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">

                    <Setter Property="SnapsToDevicePixels" Value="true" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="{DynamicResource DefaultContentFontSize}" />
                    <Setter Property="Foreground" Value="Gray" />
                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border
                                    Name="Border"
                                    BorderThickness="0"
                                    Padding="5"
                                    CornerRadius="0"
                                    Background="White" >
                                    <Label HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                        <ContentPresenter/>
                                    </Label>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#FFE7E6E6"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <!--End of Combobox style-->

    <!--GroupBox style-->
    <Style  x:Key="InvicoGroupBoxStyle" TargetType="{x:Type GroupBox}">
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource DefaultContentFontSize}"/>
        <!--<Setter Property="Foreground" Value="#CED4DA"/>-->
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#CED4DA" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <!--End of groupBox style-->

    <!--RichTextBox Question Style-->
    <Style x:Key="InvicoRichTextBoxQuestionStyle" TargetType="{x:Type RichTextBox}">
        <Style.Resources>
            <Style TargetType="{x:Type Paragraph}" >
                <Setter Property="Margin" Value="0"/>
            </Style>
        </Style.Resources>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource DefaultContentFontSize}"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Padding" Value="0,0"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <Border Background="{TemplateBinding Background}" x:Name="Bd" BorderBrush="#CED4DA" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="100"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End of RichTextBox Question style-->

    <!--RichTextBox Style-->
    <Style x:Key="InvicoRichTextBoxStyle" TargetType="{x:Type RichTextBox}">
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource DefaultContentFontSize}"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Padding" Value="3,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <Border Background="{TemplateBinding Background}" x:Name="Bd" BorderBrush="#CED4DA" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="100"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End of RichTextBox style-->

    <!--TextBox Style-->
    <Style x:Key="InvicoTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource DefaultContentFontSize}"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Padding" Value="3,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" x:Name="Bd" BorderBrush="#CED4DA" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="50"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MaxLength" Value="200"/>
    </Style>
    <!--End of textBox Style-->

    <!--PasswordBox Style-->
    <Style x:Key="InvicoPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource DefaultContentFontSize}"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="MaxLength" Value="200"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Background="{TemplateBinding Background}" x:Name="Bd" BorderBrush="#CED4DA" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="100"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End of PasswordBox Style-->

    <!--Separator style-->
    <Style TargetType="{x:Type Separator}">
        <Setter Property="Width" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <!--<Setter Property="Style" Value="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>-->
    </Style>
    <!--End of separator style-->

    <!--RadioButton style-->
    <Style  x:Key="InvicoRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="#F4F4F4"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator x:Name="bulletDecorator" SnapsToDevicePixels="True" Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="15" Height="15">
                                <Ellipse x:Name="Border" Fill="Transparent" StrokeThickness="1" Stroke="Gray" />
                                <Ellipse x:Name="CheckMark" StrokeThickness="1" Margin="3" Fill="{StaticResource DefaultButtonBackground}" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"></ContentPresenter>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="CheckMark" Value="Collapsed"/>
                            <Setter Property="Stroke" TargetName="CheckMark" Value="Blue"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="14,0,0,0" SnapsToDevicePixels="True"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="2,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="bulletDecorator" Value="0.2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End of RadioButton style-->

    <!--Menu style-->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MaxWidth" Value="295" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <!--Here is where you change the border thickness to zero on the menu-->
                    <Border BorderThickness="1" x:Name="Border" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" Background="LightGray">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1" Color="LightGray" Direction="115" Opacity=".8"/>
                        </Border.Effect>
                        <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#F7F7F4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Separator -->
    <Style TargetType="{x:Type Separator}" x:Key="CustomSeparatorStyle">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="-30,5,0,5"/>
        <Setter Property="Background" Value="#F7F7F4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="#DADAD6" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End menu style-->

    <sw:WindowMinimizeCommand x:Key="MinimizeCommand"></sw:WindowMinimizeCommand>
    <sw:WindowMaximizeCommand x:Key="MaximizeCommand"></sw:WindowMaximizeCommand>
    <sw:WindowCloseCommand x:Key="CloseCommand"></sw:WindowCloseCommand>

    <ControlTemplate x:Key="ButtonFormClose" TargetType="Button">
        <Border Name="brParent" Grid.Row="2" Width="32" Height="32" Padding="10" Background="Transparent">
            <Grid Background="Transparent">
                <Path Name="path" Data="M2.5,22.5 L22.5,2.5 M22.5,22.5 L2.5,2.5" Stretch="Fill" Stroke="Red" StrokeThickness="1.5"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="brParent" Property="Background" Value="Red"/>
                <Setter TargetName="path" Property="Stroke" Value="White"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Nút bấm thu nhỏ Form xuống TaskBar-->
    <ControlTemplate x:Key="ButtonFormMinimize" TargetType="Button">
        <Border Name="brParent" Grid.Row="2" Width="32" Height="32" Padding="10" Background="Transparent">
            <Grid Background="Transparent">
                <Path Name="path" Data="M2.5,11.5 L22.5,11.5" Stretch="Fill" Stroke="White" StrokeThickness="2"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="brParent" Property="Background" Value="#FFB9B6B6"/>
                <Setter TargetName="path" Property="Stroke" Value="White"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonFormRestoreDown" TargetType="ToggleButton">
        <Border Name="brParent" Grid.Row="2" Width="32" Height="32" Padding="9" Background="Transparent">
            <Grid>
                <Grid Background="Transparent">
                    <Path Name="p1" Data="M5.4802507,2.7293929 L5.4725213,3.1494975 16.804877,3.1494975 16.805163,4.0114831 5.4725213,4.0869855 5.424476,8.0065737 13.766026,8.0065737 13.742134,11.932942 16.777353,11.898693 16.804309,2.7216506 z" Margin="4.334,1.378,0.718,5.996" Stretch="Fill" Stroke="White" StrokeThickness="1" />
                    <Path Name="p2" Data="M5.4445028,2.7293925 L5.4434175,3.5458506 16.802019,3.4703325 16.776801,4.4519061 5.4414103,4.4620303 5.4322515,11.946233 16.729689,11.898693 16.804307,2.7216506 z" Margin="0.696,6.08,4.366,1.286" Stretch="Fill" Stroke="White" StrokeThickness="1"/>
                    <Path Name="p3" Data="M5.4445028,2.7293925 L5.4434175,3.5458506 16.802019,3.4703325 16.802304,3.8855957 5.4414103,3.9234126 5.4322515,11.946233 16.729689,11.898693 16.804307,2.7216506 z"  Stretch="Fill" Stroke="White" StrokeThickness="1" Visibility="Collapsed" />
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="brParent" Property="Background" Value="#FFB9B6B6"/>
                <Setter TargetName="p1" Property="Stroke" Value="White"/>
                <Setter TargetName="p2" Property="Stroke" Value="White"/>
                <Setter TargetName="p3" Property="Stroke" Value="White"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <!--Nút bấm về kích thước khung trước đó-->
                <Setter TargetName="p1" Property="Visibility" Value="Visible"/>
                <Setter TargetName="p2" Property="Visibility" Value="Visible"/>
                <Setter TargetName="p3" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="false">
                <!--Nút bấm về kích thước khung trước đó-->
                <Setter TargetName="p1" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="p2" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="p3" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Button}" x:Key="WindowButton">
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Padding" Value="10"/>
        <!--<Setter Property="Background" Value="{StaticResource WindowButtonColor}"/>-->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource WindowForeColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource WindowButtonColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource WindowColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource WindowButtonOverColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource WindowForeHighlightColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource WindowButtonPressedColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource WindowForeColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Image}" x:Key="WindowIcon">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
    </Style>

</ResourceDictionary>